{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"kOAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,qCACA,8CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACG,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACG,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJGA,MAUb,OAAO,gCAAQJ,KAeFS,EAXD,SAACV,GAAW,IACjBE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCWjDE,E,4MA7CbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACDA,EAAMC,OAArBV,EADgB,EAChBA,KAAMW,EADU,EACVA,MAEb,EAAKC,SAAL,eACGZ,EAAOW,K,EAIbE,WAAa,WACV,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGZ,IAAD,EACgBS,KAAKR,MAAnBP,EADF,EACEA,KAAMC,EADR,EACQA,IAEd,OACG,iCACG,uBAAOe,QAAQ,OAAf,kBACA,uBACGC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eACjB,uBAAOQ,QAAQ,MAAf,iBACD,uBACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAChB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GAxC3CO,aCgCJC,E,4MA7Bbd,MAAQ,CACNe,WAAY,I,EAGdnB,gBAAkB,SAACJ,GAAW,IACpBuB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACXU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACvC,OAAOA,IAAM1B,Q,EAKtBe,aAAe,SAACU,GACZ,EAAKZ,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,uDAGhD,IACAF,EAAeP,KAAKR,MAApBe,WACR,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GAxBfM,a,MCClBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b021b33d.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  )\n};\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n         <td>{row.name}</td>\n         <td>{row.job}</td>\n         <td>\n            <button onClick={() => props.removeCharacter(index)}>Delete</button>\n         </td>\n      </tr>      \n    )\n  })\n\n  return <tbody>{rows}</tbody>;\n};\n\n\nconst Table = (props) => {\n  const {characterData, removeCharacter} = props\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n    </table>\n  )\n}\n\nexport default Table;\n","import React, {Component} from 'react'\n\nclass Form extends Component {\n  initialState = {\n    name: '',\n    job: '',\n  };\n\n  state = this.initialState;\n  \n  handleChange = (event) => {\n     const {name, value} = event.target;\n\n     this.setState({\n       [name]: value,\n     });\n  };  \n  \n  submitForm = () => {\n     this.props.handleSubmit(this.state)\n     this.setState(this.initialState)\n  }\n  \n  render() {\n     const { name, job } = this.state;\n\n     return (\n        <form>\n           <label htmlFor=\"name\">Name</label>\n           <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={name}\n              onChange={this.handleChange} />\n            <label htmlFor=\"job\">Job</label>\n           <input\n             type=\"text\"\n             name=\"job\"\n             id=\"job\"\n             value={job}\n             onChange={this.handleChange} />\n            <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />             \n         </form>\n     );\n  }  \n}\n\nexport default Form;","import React, {Component} from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n  state = {\n    characters: [],\n  };  \n  \n  removeCharacter = (index) => {\n     const {characters} = this.state\n\n     this.setState({\n        characters: characters.filter((character, i) => {\n           return i !== index\n        }),\n     })\n  }  \n  \n  handleSubmit = (character) => {\n      this.setState({characters: [...this.state.characters, character]})\n  }; \n  \n  render() {\n    const { characters } = this.state;\n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}